/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProfileImport } from './routes/profile'
import { Route as LeaderboardsImport } from './routes/leaderboards'
import { Route as DailyImport } from './routes/daily'
import { Route as IndexImport } from './routes/index'
import { Route as PuzzleIndexImport } from './routes/puzzle/index'
import { Route as PuzzlePuzzleIdImport } from './routes/puzzle/$puzzleId'

// Create/Update Routes

const ProfileRoute = ProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const LeaderboardsRoute = LeaderboardsImport.update({
  id: '/leaderboards',
  path: '/leaderboards',
  getParentRoute: () => rootRoute,
} as any)

const DailyRoute = DailyImport.update({
  id: '/daily',
  path: '/daily',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PuzzleIndexRoute = PuzzleIndexImport.update({
  id: '/puzzle/',
  path: '/puzzle/',
  getParentRoute: () => rootRoute,
} as any)

const PuzzlePuzzleIdRoute = PuzzlePuzzleIdImport.update({
  id: '/puzzle/$puzzleId',
  path: '/puzzle/$puzzleId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/daily': {
      id: '/daily'
      path: '/daily'
      fullPath: '/daily'
      preLoaderRoute: typeof DailyImport
      parentRoute: typeof rootRoute
    }
    '/leaderboards': {
      id: '/leaderboards'
      path: '/leaderboards'
      fullPath: '/leaderboards'
      preLoaderRoute: typeof LeaderboardsImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/puzzle/$puzzleId': {
      id: '/puzzle/$puzzleId'
      path: '/puzzle/$puzzleId'
      fullPath: '/puzzle/$puzzleId'
      preLoaderRoute: typeof PuzzlePuzzleIdImport
      parentRoute: typeof rootRoute
    }
    '/puzzle/': {
      id: '/puzzle/'
      path: '/puzzle'
      fullPath: '/puzzle'
      preLoaderRoute: typeof PuzzleIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/daily': typeof DailyRoute
  '/leaderboards': typeof LeaderboardsRoute
  '/profile': typeof ProfileRoute
  '/puzzle/$puzzleId': typeof PuzzlePuzzleIdRoute
  '/puzzle': typeof PuzzleIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/daily': typeof DailyRoute
  '/leaderboards': typeof LeaderboardsRoute
  '/profile': typeof ProfileRoute
  '/puzzle/$puzzleId': typeof PuzzlePuzzleIdRoute
  '/puzzle': typeof PuzzleIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/daily': typeof DailyRoute
  '/leaderboards': typeof LeaderboardsRoute
  '/profile': typeof ProfileRoute
  '/puzzle/$puzzleId': typeof PuzzlePuzzleIdRoute
  '/puzzle/': typeof PuzzleIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/daily'
    | '/leaderboards'
    | '/profile'
    | '/puzzle/$puzzleId'
    | '/puzzle'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/daily'
    | '/leaderboards'
    | '/profile'
    | '/puzzle/$puzzleId'
    | '/puzzle'
  id:
    | '__root__'
    | '/'
    | '/daily'
    | '/leaderboards'
    | '/profile'
    | '/puzzle/$puzzleId'
    | '/puzzle/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DailyRoute: typeof DailyRoute
  LeaderboardsRoute: typeof LeaderboardsRoute
  ProfileRoute: typeof ProfileRoute
  PuzzlePuzzleIdRoute: typeof PuzzlePuzzleIdRoute
  PuzzleIndexRoute: typeof PuzzleIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DailyRoute: DailyRoute,
  LeaderboardsRoute: LeaderboardsRoute,
  ProfileRoute: ProfileRoute,
  PuzzlePuzzleIdRoute: PuzzlePuzzleIdRoute,
  PuzzleIndexRoute: PuzzleIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/daily",
        "/leaderboards",
        "/profile",
        "/puzzle/$puzzleId",
        "/puzzle/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/daily": {
      "filePath": "daily.tsx"
    },
    "/leaderboards": {
      "filePath": "leaderboards.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/puzzle/$puzzleId": {
      "filePath": "puzzle/$puzzleId.tsx"
    },
    "/puzzle/": {
      "filePath": "puzzle/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
